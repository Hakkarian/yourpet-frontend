{"version":3,"file":"static/js/859.fd6474fd.chunk.js","mappings":"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","sources":["redux/friends/friends-selector.js","pages/OurFriendsPage-Alex/OurFriendsPage.styled.jsx","components/OurFriends/FriendsItems/friends.js","components/OurFriends/Schedule/Schedule.styled.jsx","components/OurFriends/Schedule/Schedule.jsx","components/OurFriends/FriendsItems/FriendsItems.styled.jsx","components/OurFriends/FriendsItems/FriendsItems.jsx","components/OurFriends/FriensList/FriendsList.styled.jsx","components/OurFriends/FriensList/FriendsList.jsx","pages/OurFriendsPage-Alex/index.js","pages/OurFriendsPage-Alex/OurFriendsPage.jsx","shared/components/ReusableTitle/index.js","shared/components/ReusableTitle/ReusableTitle.jsx"],"sourcesContent":["export const selectAllFriends = store => store.friends.items;\nexport const selectIsLoading = store => store.friends.isLoading;\nexport const selectError = store => store.friends.error;","import styled from \"@emotion/styled\";\n\nexport const Cointainer = styled.div`\nfont-family: 'Manrope';\nfont-style: normal;\npadding:0 0 75px;\n@media screen and (min-width: 768px) {\n   padding:0 0 204px;\n  }\n  @media screen and (min-width: 1280px) {\n   padding:0 0 81px;\n  }\n`","const titleName = (title) => {\n  if(title.includes('LicoVet') )return \"LicoVet\"\n  if(title.includes('Велике серце') )return \"PetHelp\"\n  if(title.includes('Харківський') )return \"Харківський Притулок\"\n  if(title.includes('Сіріус') )return \"Сіріус\"\n  if(title.includes('БАРБОС') )return \"БАРБОС\"\n   }\n   const adresName = (title) => {\n    if(title.includes('LicoVet') )return \"Dryhetiv Street, 77 \"\n    if(title.includes('ЛЕВ') )return \"Promuslova Street, 56\"\n    if(title.includes('Харківський') )return \"St. Kvitky-Osnovyanenko, 7\" \n    if(title.includes('Happy') )return \"Chota Rystaveli Street, 44\" \n    if(title.includes('Сіріус') )return \"Fedorivka, Kyiv Oblast\" \n    if(title.includes('БАРБОС') )return \"Grigorenka Street, 25\" \n}\n\n\n     export  {titleName , adresName }","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  position: absolute;\n  display: grid;\n  row-gap: 4px;\n  top: 20px;\n  left: 0;\n  width: 120px;\n  height: 135px;\n  padding:8px;\n  box-sizing: border-box;\n  background: #FFFFFF;\n  border: 1px solid #54ADFF;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 8px;\n  @media screen and (min-width: 768px) {\n    height: 160px;\n    top: 25px;\n     }\n     @media screen and (min-width: 1280px) {\n      top: 30px;\n       }\n  }\n`;\nexport const Wrapper = styled.div`\n  position: relative;\n  button {\n    padding:0;\n    border: none;\n    display: block;\n    background-color: transparent;\n    font-weight: 400;\n    font-size: 12px;\n    color: #111111;\n    width: 100%;\n    text-align: inherit;\n    cursor:pointer;\n    transition: color 250ms ease-in-out;\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      line-height: 19px;\n     }\n     @media screen and (min-width: 1280px) {\n     font-size: 16px;\n    line-height: 22px;\n     }\n    &:hover {\n      color: ${({ theme }) => theme.colors.blue};\n    }\n    .addressItem {\n      height: 48px;\n    }\n  }\n  }\n`;\nexport const Item = styled.li`\n  width: 100%;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: 'transparent';\n  p{\n    line-height: 12px;\n    font-size: 12px;\n    font-weight: 500;\n    @media screen and (min-width: 768px) {\n      line-height: 16px;\n       }\n  }\n\n`;","import React, { useState } from 'react';\n\nimport { List, Item, Wrap, Wrapper } from './Schedule.styled';\n\nexport const Schedule = ({ workDays }) => {\n  const [isShow, setIsShow] = useState(false);\n  const days = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  let date = new Date();\n\n  function getWeekDay(date) {\n    return days[date.getDay()];\n  }\n\n  const newWorkDays = [...workDays].map((workDay, idx) => {\n    return { ...workDay, dayOfWeek: days[idx] };\n  });\n\n  const handleToggle = () => {\n    setIsShow(!isShow);\n  };\n  const workOurs = data => {\n    const currentDay = getWeekDay(date);\n    for (let day of data) {\n      if (currentDay === day.dayOfWeek && day.isOpen) {\n        return `${day.from} - ${day.to}`;\n      }\n      if (currentDay === day.dayOfWeek && !day.isOpen) {\n        return 'closed';\n      }\n    }\n  };\n\n  return (\n    <Wrapper onMouseLeave={() => {setIsShow(false)}} >\n      \n      <button type=\"button\" onClick={handleToggle}>\n        {workOurs(newWorkDays)}\n      </button>\n      {isShow && (\n        <List >\n          {newWorkDays.map(({ isOpen, from, to, dayOfWeek }) => (\n            <Item key={dayOfWeek}>\n              {isShow && (\n                <Wrap>\n                  <div>\n                    <p>{dayOfWeek}</p>\n                  </div>\n\n                  {!isOpen ? (\n                    <p>closed</p>\n                  ) : (\n                    <p>\n                      {[from]}-{[to]}\n                    </p>\n                  )}\n                </Wrap>\n              )}\n            </Item>\n          ))}\n        </List>\n      )}\n    </Wrapper>\n  );\n};","import styled from \"@emotion/styled\";\n\nexport const FriendsItem = styled.li`\nbox-sizing: border-box;\nbackground: #FFFFFF;\nwidth: 280px;\nheight: 239px;\nposition: relative;\nbackground-color: inherit;\nbox-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\nborder-radius: 40px;\npadding:16px 0  ;\n@media screen and (min-width: 768px) {\n  width: 336px;\n  height: 275px;\n }\n @media screen and (min-width: 1280px) {\n  width: 395px;\n  height: 287px;\n }\n`\nexport const Title = styled.a`\nfont-family: 'Manrope';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 20px;\nline-height: 27px;\nheight: 27px;\npadding:0;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ncolor: #54ADFF;\n@media screen and (min-width: 768px) {\n\n }\n @media screen and (min-width: 1280px) {\n \n }\n`\nexport const WrapperForImgAndInformation = styled.div`\ndisplay: grid;\ngrid-template-columns: auto auto;\njustify-content: start;\npadding: 16px 0;\n\n`\nexport const WrapperImage = styled.div`\nwidth: 100px;\nheight: 68px;\nmargin: 0 12px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n@media screen and (min-width: 768px) {\n  width: 124px;\n  height: 88px;\n }\n @media screen and (min-width: 1280px) {\n  margin: 0 20px 0 12px;\n  width: 146px;\n  height: 104px;\n }\n`\nexport const LogoCompanyImg = styled.img`\nwidth: 100%;\nheight: 100%;\n\n@media screen and (min-width: 768px) {\n  width: 124px;\n  height: 88px;\n }\n @media screen and (min-width: 1280px) {\n  width: 146px;\n  height: 104px;\n }\n`\nexport const WrapperInformation = styled.div`\nmargin:0;\n`\nexport const ListInformation = styled.ul`\npadding: 0 ;\ndisplay: grid;\ngap: 12px;\nmargin: 0;\n@media screen and (min-width: 768px) {\n  gap: 16px;\n }\n @media screen and (min-width: 1280px) {\n  gap: 12px;\n }\n`\nexport const ItemInformation = styled.li`\nmargin:0;\nheight: 32px;\noverflow: hidden;\n@media screen and (min-width: 768px) {\n  height: 38px;\n }\n @media screen and (min-width: 1280px) {\n  height: 44px;\n }\n`\nexport const WrapTime = styled.li`\nmargin:0;\nheight: 32px;\n@media screen and (min-width: 768px) {\n  height: 38px;\n }\n @media screen and (min-width: 1280px) {\n  height: 44px;\n }\n`\nexport const TimeTtext = styled.p`\n\n  margin:0;\n  font-family: system-ui;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  color: inherit;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 19px;\n   }\n   @media screen and (min-width: 1280px) {\n   font-size: 16px;\n  line-height: 22px;\n   }\n  \n`\nexport const LinKForInformation = styled.a`\npadding:0;\nmargin:0;\nwidth: fit-content;\ncolor: #111111;\n&:hover {\n  color:#54ADFF;\n   cursor:pointer;\n },\n\n`\nexport const NameTextinformation = styled.p`\nmargin:0;\nfont-family: 'Manrope';\n// font-family: system-ui;\nfont-style: normal;\nfont-weight: 600;\nfont-size: 12px;\nline-height: 16px;\ncolor: inherit;\n@media screen and (min-width: 768px) {\nfont-size: 14px;\nline-height: 19px;\n }\n @media screen and (min-width: 1280px) {\n  font-size: 16px;\nline-height: 22px;\n }\n`\nexport const Textinformation = styled.div`\nmargin:0;\n// font-family: 'Manrope';\nfont-family: system-ui;\nfont-style: normal;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 16px;\ncolor: inherit;\n@media screen and (min-width: 768px) {\n  font-size: 14px;\n  line-height: 19px;\n }\n @media screen and (min-width: 1280px) {\n font-size: 16px;\nline-height: 22px;\n }\n`\n\n\n\n\n\n\n","\nimport { titleName , adresName} from './friends'\nimport { Schedule } from '../Schedule/Schedule';\nimport {\n   FriendsItem, Title, WrapperForImgAndInformation, WrapperImage,WrapTime,\n   LogoCompanyImg, WrapperInformation, ListInformation, ItemInformation, LinKForInformation,\n   NameTextinformation, Textinformation , TimeTtext\n\n} from \"./FriendsItems.styled\"\n\nconst FriendsItems = ({ title, url, addressUrl, imageUrl, address, workDays, phone, email }) => {\n\n   return (\n      <>\n         <FriendsItem >\n            <Title href={url} loading=\"lazy\" rel=\"noopener nofollow\" target=\"_ blank\">\n               {title.length < 15 ? title : titleName(title)}\n            </Title>\n\n            <WrapperForImgAndInformation>\n               <WrapperImage>\n                  <LogoCompanyImg src={imageUrl ?? \"https://i.ibb.co/kqpsyG0/cat-baby-787084-640.jpg\"} alt=\"Logo company\" />\n               </WrapperImage>\n               <WrapperInformation>\n                  <ListInformation>\n\n                     <WrapTime>\n                        <NameTextinformation>Time:</NameTextinformation>\n                        {workDays?.length ? (\n                           <Schedule workDays={workDays} />) :\n                            ( <TimeTtext>day and night</TimeTtext>\n                        )}\n                     </WrapTime>\n\n                     <ItemInformation>\n                        <LinKForInformation href={addressUrl} target=\"_ blank\">\n                           <NameTextinformation>Address:</NameTextinformation>\n                           <Textinformation>{address !== null ? adresName(title) : \"website only\"}</Textinformation>\n                        </LinKForInformation>\n                     </ItemInformation>\n\n                     <ItemInformation>\n                        <LinKForInformation href={email && 'mailto:' + email} >\n                           <NameTextinformation>Email:</NameTextinformation>\n                           <Textinformation>{email ? email : \"website only\"}</Textinformation>\n                        </LinKForInformation>\n                     </ItemInformation>\n\n                     <ItemInformation>\n                        <LinKForInformation href={phone && 'tel:' + phone}>\n                           <NameTextinformation>Phone:</NameTextinformation>\n                           <Textinformation>{phone !== null ? phone : \"email only\"}</Textinformation>\n                        </LinKForInformation>\n                     </ItemInformation>\n\n                  </ListInformation>\n               </WrapperInformation>\n\n            </WrapperForImgAndInformation>\n         </FriendsItem>\n      </>\n   )\n}\n\nexport default FriendsItems;","import styled from \"@emotion/styled\";\n\nexport const FriendList = styled.ul`\ndisplay: grid;\ngap: 20px;\npadding:0;\njustify-items: center;\n@media screen and (min-width: 768px) {\n  grid-template-columns: 1fr 1fr;\n  column-gap: 32px;\n  row-gap: 24px;\n }\n @media screen and (min-width: 1280px) {\n  grid-template-columns: 1fr 1fr 1fr;\n  gap:32px;\n }\n`;\n\n\n\n","import FriendsItem from '../FriendsItems/FriendsItems';\nimport { FriendList,  } from './FriendsList.styled'\n\nconst FriendsList = ({ friend }) => {\n\n   return (\n      <FriendList>\n         {friend.map(({ _id, title, url, addressUrl, imageUrl, address,\n            workDays, phone,  email}) => (\n               \n            <FriendsItem\n               key={_id}\n               _id={_id}\n               title={title}\n               url={url}\n               addressUrl={addressUrl}\n               imageUrl={imageUrl}\n               address={address}\n               workDays={workDays}\n               phone={phone}\n               email={email}\n            />\n\n         )\n         )}\n      </FriendList>\n   );\n};\n\nexport default FriendsList;\n\n\n\n","import OurFriendsPage from './OurFriendsPage'\n\nexport default OurFriendsPage;\n","import React, { useEffect } from 'react';\nimport { fetchFriends } from 'redux/friends/friends-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectAllFriends,\n  selectIsLoading,\n  selectError,\n} from 'redux/friends/friends-selector';\nimport { Cointainer } from './OurFriendsPage.styled';\nimport ReusableTitle from '../../shared/components/ReusableTitle';\nimport { Loader } from 'components/Loader';\nimport FriendsList from 'components/OurFriends/FriensList/FriendsList';\n\nconst OurFriendsPage = () => {\n  const dispatch = useDispatch();\n  const allFriends = useSelector(selectAllFriends);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchFriends());\n  }, [dispatch]);\n\n  return (\n    <Cointainer>\n      <ReusableTitle>Our Friend</ReusableTitle>\n      {isLoading && !error && <Loader />}\n      {error && <p>Somthing wrong</p>}\n\n      <FriendsList friend={allFriends} />\n    </Cointainer>\n  );\n};\n\nexport default OurFriendsPage;\n","import ReusableTitle from './ReusableTitle'\n\nexport default ReusableTitle;","import styled from '@emotion/styled';\n\nconst ReusableTitle = styled.h1`\n  margin-top: 40px;\n  margin-bottom: 24px;\n\n  text-align: center;\n  font-size: ${({ theme }) => theme.spacing(6)};\n  font-weight: 700;\n  line-height: 66px;\n  letter-spacing: 0.03em;\n  color: ${({ theme }) => theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${({ theme }) => theme.spacing(12)};\n    margin-top: 70px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport default ReusableTitle;\n"],"names":["selectAllFriends","store","friends","items","selectIsLoading","isLoading","selectError","error","Cointainer","styled","titleName","title","includes","adresName","List","Wrapper","theme","colors","blue","Item","Wrap","Schedule","workDays","useState","isShow","setIsShow","days","date","Date","newWorkDays","map","workDay","idx","dayOfWeek","onMouseLeave","type","onClick","data","currentDay","getDay","getWeekDay","day","isOpen","from","to","workOurs","FriendsItem","Title","WrapperForImgAndInformation","WrapperImage","LogoCompanyImg","WrapperInformation","ListInformation","ItemInformation","WrapTime","TimeTtext","LinKForInformation","NameTextinformation","Textinformation","url","addressUrl","imageUrl","address","phone","email","href","loading","rel","target","length","src","alt","FriendList","friend","_id","dispatch","useDispatch","allFriends","useSelector","useEffect","fetchFriends","ReusableTitle","Loader","spacing","black"],"sourceRoot":""}