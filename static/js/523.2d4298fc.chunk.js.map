{"version":3,"file":"static/js/523.2d4298fc.chunk.js","mappings":"yPAEaA,EAAgBC,EAAAA,EAAAA,GAAH,kIACX,qBAAGC,MAAkBC,QAAQ,GAA7B,IAIJ,qBAAGD,MAAkBE,OAAOC,KAA5B,ICFEC,EAAcL,EAAAA,EAAAA,IAAH,oGAMXM,EAAaN,EAAAA,EAAAA,IAAH,iHASVO,GAAUP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,icAeP,qBAAGC,MAAkBC,QAAQ,GAA7B,IACC,qBAAGD,MAAkBC,QAAQ,GAA7B,IAEU,qBAAGD,MAAkBE,OAAOM,IAA5B,IACH,qBAAGR,MAAkBC,QAAQ,GAA7B,IAORQ,EAAYV,EAAAA,EAAAA,IAAH,iDAgBTW,GAZWX,EAAAA,EAAAA,MAAH,qHAOYA,EAAAA,EAAAA,GAAOY,EAAAA,EAAPZ,CAAH,sEACN,qBAAGC,MAAkBE,OAAOM,IAA5B,KAIQT,EAAAA,EAAAA,GAAOD,EAAPC,CAAH,kG,SCzDvBa,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUJ,EAAAA,KAAaK,IAAI,EAAG,0CAA0CF,SAAS,2BCLnF,EDQqB,WASnB,OACE,SAACZ,EAAD,WACE,UAACC,EAAD,YACE,SAACK,EAAD,wBACA,SAAC,KAAD,CACES,cAba,CACnBJ,MAAO,GACPE,SAAU,IAYJL,iBAAkBA,EAClBQ,SAVa,SAAC,IACpBC,EAD0C,EAApBA,gBACR,EACf,EAKK,SAKG,gBAAGC,EAAH,EAAGA,aAAH,OACC,UAAChB,EAAD,YACE,UAACG,EAAD,YACE,kBAAOc,QAAQ,QAAf,oBACA,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,WACxB,SAAC,KAAD,CAAcA,KAAK,cAErB,UAAChB,EAAD,YACE,kBAAOc,QAAQ,WAAf,uBACA,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,cACxB,SAAC,KAAD,CAAcA,KAAK,iBAErB,UAAChB,EAAD,YACE,kBAAOc,QAAQ,WAAf,+BACA,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,cACxB,SAAC,KAAD,CAAcA,KAAK,iBAErB,SAACd,EAAA,EAAD,CAAgBa,KAAK,SAASE,SAAUJ,EAAxC,wBAjBH,QA0BV,C","sources":["shared/components/ReusableTitle/ReusableTitle.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx","pages/RegisterPage/index.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReusableTitle = styled.h1`\n  font-size: ${({ theme }) => theme.spacing(12)}px;\n  font-weight: 700;\n  line-height: 66px;\n  letter-spacing: 0.03em;\n  color: ${({ theme }) => theme.colors.black};\n`;","import styled from '@emotion/styled';\nimport ReusableButton from 'shared/components/ReusableButton';\nimport { Form } from 'formik';\nimport { ReusableTitle } from 'shared/components/ReusableTitle/ReusableTitle';\n\nexport const RegisterCss = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const FlexDivCss = styled.div`\n  width: 280px;\n  height: 473px;\n  padding: 40px 12px;\n\n\n  background-color: #fff;\n`;\n\nexport const FormCss = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 30px;\n\n  label {\n    position: absolute;\n    top: 50%;\n    left: 10%;\n    transform: translate(0%, -50%);\n    transition: transform 250ms ease-in-out;\n  }\n\n  input {\n    width: ${({ theme }) => theme.spacing(64)}px;\n    height: ${({ theme }) => theme.spacing(12)}px;\n\n    border: 1px solid ${({ theme }) => theme.colors.blue};\n    border-radius: ${({ theme }) => theme.spacing(10)}px;\n  }\n  input:focus + label {\n    transform: translate(0%, 150%);\n  }\n`;\n\nexport const AnchorCss = styled.div`\n    position: relative;\n`\n\nexport const LabelCss = styled.label`\n    position: absolute;\n    top: 50%;\n    left: 10%;\n    transform: translate(0%, -50%)\n`\n\nexport const ReusableButtonCss = styled(ReusableButton)`\n    background-color: ${({ theme }) => theme.colors.blue};\n    color: #fff;\n`;\n\nexport const ReusableTitleCss = styled(ReusableTitle)`\n    margin-top: 0;\n    margin-bottom: 50px;\n\n    text-align: center;\n`\n\n","import * as Yup from 'yup';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport ReusableButton from 'shared/components/ReusableButton';\nimport { AnchorCss, FlexDivCss, FormCss, RegisterCss, ReusableTitleCss } from './RegisterPage.styled';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required!')\n})\n\nconst RegisterPage = () => {\n  const initialState = {\n    email: '',\n    password: ''\n  }\n\n  const handleSubmit = ({ setSubmitting }) => {\n    setSubmitting(false)\n  }\n  return (\n    <RegisterCss>\n      <FlexDivCss>\n        <ReusableTitleCss>Register</ReusableTitleCss>\n        <Formik\n          initialValues={initialState}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <FormCss>\n              <AnchorCss>\n                <label htmlFor=\"email\">Email</label>\n                <Field type=\"text\" name=\"email\" />\n                <ErrorMessage name=\"email\"></ErrorMessage>\n              </AnchorCss>\n              <AnchorCss>\n                <label htmlFor=\"password\">Password</label>\n                <Field type=\"text\" name=\"password\" />\n                <ErrorMessage name=\"password\"></ErrorMessage>\n              </AnchorCss>\n              <AnchorCss>\n                <label htmlFor=\"password\">Confirm password</label>\n                <Field type=\"text\" name=\"password\" />\n                <ErrorMessage name=\"password\"></ErrorMessage>\n              </AnchorCss>\n              <ReusableButton type=\"submit\" disabled={isSubmitting}>\n                Register\n              </ReusableButton>\n            </FormCss>\n          )}\n        </Formik>\n      </FlexDivCss>\n    </RegisterCss>\n  );\n}\n\nexport default RegisterPage;\n\n\n","import RegisterPage from \"./RegisterPage\";\n\nexport default RegisterPage;"],"names":["ReusableTitle","styled","theme","spacing","colors","black","RegisterCss","FlexDivCss","FormCss","Form","blue","AnchorCss","ReusableTitleCss","ReusableButton","validationSchema","Yup","shape","email","required","password","min","initialValues","onSubmit","setSubmitting","isSubmitting","htmlFor","type","name","disabled"],"sourceRoot":""}