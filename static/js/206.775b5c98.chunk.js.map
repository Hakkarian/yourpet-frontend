{"version":3,"file":"static/js/206.775b5c98.chunk.js","mappings":"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","sources":["pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx","pages/LoginPage/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CenrteredDiv = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import React from 'react'\nimport { CenrteredDiv } from './LoginPage.styled'\n\n\nimport { useState } from 'react';\n\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\n\nimport Button from 'shared/components/Button/Button';\nimport { ReactComponent as EyeOpen } from '../../icons/eye-open.svg';\nimport { ReactComponent as EyeClosed } from '../../icons/eye-closed.svg';\nimport { ReactComponent as Cross } from '../../icons/cross-small.svg';\n\nimport { login } from 'redux/auth/auth-operations';\nimport { Link } from 'react-router-dom';\nimport { FormCss } from 'components/RegisterForm/RegisterForm.styled';\nimport styled from '@emotion/styled';\nimport ReusableButton from 'shared/components/ReusableButton';\nimport ReusableTitle from 'shared/components/ReusableTitle';\nimport { color, font } from 'shared/utils/mixin.styled';\n\nconst validateShecma = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be less than 16 characters')\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,16}$/,\n      'Password must contain at least 1 uppercase letter, 1 lowercase letter and 1 number'\n    )\n    .required('Required'),\n});\n\nexport const FlexDivCss = styled.div`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  padding: 40px 12px;\n\n  background-color: #fff;\n\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 60px 75px;\n  }\n`;\n\nexport const InputEmail = styled(Field)`\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid;\n\n  ::placeholder {\n  }\n  :focus {\n    outline: none;\n  }\n`;\nexport const InputPassword = styled(Field)`\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid;\n\n  ::placeholder {\n  }\n  :focus {\n    outline: none;\n  }\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  margin-top: 40px;\n  margin-bottom: 60px;\n  flex-direction: column;\n  gap: 32px;\n  width: 100%;\n`;\nexport const Text = styled.p`\n  line-height: 16px;\n\n  margin-top: 20px;\n`;\nexport const StyledLink = styled(Link)``;\nexport const Error = styled.p`\n  padding-left: 12px;\n  margin-top: 4px;\n`;\nexport const Lable = styled.label`\n  position: relative;\n`;\nexport const AbsoluteDiv = styled.div`\n  position: absolute;\n  right: 17px;\n  top: 17px;\n  transform: translate(35%, -35%);\n`;\nexport const ToggleBtn = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  outline: none;\n`;\nexport const ButtonEye = styled.button`\n  min-width: 0;\n  position: absolute;\n  top: 0;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const AnchorCss = styled.div`\n  position: relative;\n`;\n\nexport const LabelCss = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 10%;\n  transform: translate(0%, -50%);\n`;\n\nexport const ReusableButtonCss = styled(ReusableButton)`\n  width: 100%;\n\n  ${color('#fff', ({ theme }) => theme.colors.blue)}\n`;\nexport const AbsDivCss = styled.span`\n  position: absolute;\n`;\n\nexport const ReusableTitleCss = styled(ReusableTitle)`\n  margin-top: 0;\n  margin-bottom: 30px;\n\n  text-align: center;\n\n  font-weight: 500;\n  line-height: 1.375;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.361;\n  }\n`;\n\nexport const TextWrapCss = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin: 0;\n\n  font-family: 'Manrope';\n  font-size: 12px;\n  font-weight: 400;\n`;\n\nexport const TextCss = styled.p`\n  margin: 0;\n`;\n\nexport const ErrorText = styled.div`\n  position: absolute;\n  font-size: 12px;\n  ${font(null, 1.3, 500, '0.03em', 'red')}\n`;\n\n\nconst LoginPage = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    const { email, password } = values;\n    const payload = { email, password };\n    console.log('submit');\n    dispatch(login(payload));\n    actions.resetForm();\n  };\n  return (\n    <CenrteredDiv>\n\n    <FlexDivCss>\n      <ReusableTitleCss>Login</ReusableTitleCss>\n      <Formik\n        initialValues={{ email: '', password: '', confirmPassword: '' }}\n        validationSchema={validateShecma}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, values, touched }) => {\n          return (\n            <FormCss>\n              <div>\n                <Field\n                  name=\"email\"\n                  type=\"email\"\n                  className={errors.email ? 'input-error' : 'input-valid'}\n                />\n                <ErrorText>\n                  <ErrorMessage name=\"email\" />\n                </ErrorText>\n                {errors.email && (\n                  <AbsDivCss>\n                    <Cross width=\"24\" height=\"24\" stroke=\"#F43F5E\" />\n                  </AbsDivCss>\n                )}\n              </div>\n              <div style={{position: 'relative'}}>\n                <Field\n                  className={errors.password ? 'input-error' : 'input-valid'}\n                  name=\"password\"\n                  type={open ? 'text' : 'password'}\n                />\n                <ErrorText>\n                  <ErrorMessage name=\"password\" />\n                </ErrorText>\n\n                {open ? (\n                  <ButtonEye className='eye-button'\n                    type=\"button\"\n                    onClick={() => setOpen(false)}\n                  >\n                    <EyeOpen width=\"24\" height=\"24\" />\n                  </ButtonEye>\n                ) : (\n                  <ButtonEye\n                    type=\"button\"\n                    onClick={() => setOpen(true)}\n                  >\n                    <EyeClosed width=\"24\" height=\"24\" />\n                  </ButtonEye>\n                )}\n                {errors.password && (\n                  <AbsDivCss>\n                    <Cross width=\"24\" height=\"24\" stroke=\"#F43F5E\" />\n                  </AbsDivCss>\n                )}\n              </div>\n              <Button className=\"form-button\" type=\"submit\">\n                Submit\n              </Button>\n              <TextWrapCss>\n                <TextCss>Don't have an account?</TextCss>\n                <Link to=\"/register\">Register</Link>\n              </TextWrapCss>\n            </FormCss>\n          );\n        }}\n      </Formik>\n    </FlexDivCss>\n    </CenrteredDiv>\n  );\n};\n\nexport default LoginPage;","import LoginPage from \"./LoginPage\";\n\nexport default LoginPage;"],"names":["CenrteredDiv","styled","validateShecma","Yup","shape","email","required","password","min","max","matches","FlexDivCss","ButtonEye","Field","Link","AbsDivCss","ReusableButton","color","theme","colors","blue","ReusableTitleCss","ReusableTitle","TextWrapCss","TextCss","ErrorText","font","useState","open","setOpen","dispatch","useDispatch","initialValues","confirmPassword","validationSchema","onSubmit","values","actions","payload","console","log","login","resetForm","errors","touched","name","type","className","width","height","stroke","style","position","onClick","Button","to"],"sourceRoot":""}