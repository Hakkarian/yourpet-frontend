{"version":3,"file":"static/js/880.2511ce9c.chunk.js","mappings":"iSAEaA,EAAcC,EAAAA,EAAAA,GAAH,2FAET,qBAAGC,MAAkBC,QAAQ,EAA7B,IACI,qBAAGD,MAAkBC,QAAQ,EAA7B,I,SCkBnB,EArBc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACrBC,EAAQ,GACZ,OAAQF,GACN,IAAK,OACHE,EAAQ,mBACR,MACF,IAAK,YACHA,EAAQ,eACR,MACF,IAAK,cACHA,EAAQ,wBACR,MACF,QACEA,EAAQ,UAKZ,OAHoB,IAAhBD,IACFC,EAAQ,YAEH,SAACN,EAAD,UAAcM,GACtB,EClBYC,GAAaN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,sECUvB,GDLuBA,EAAAA,EAAAA,IAAH,6FCRE,CACpBG,SAAU,SACVE,MAAO,GACPG,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,SAAU,GACVC,MAAO,GACPC,WAAOC,EACPC,SAAU,K,oBCEZ,I,oCA2DA,EA3DyBC,EAAAA,GAAW,CAClCd,SAAUc,EAAAA,KACPC,MAAM,CAAC,SAAU,OAAQ,aAAc,aACvCC,WACHd,MAAOY,EAAAA,KACJG,IAAI,EAAG,gDACPC,OACAC,KAAK,WAAY,CAChBC,GAAI,SACJC,KAAM,SAAAC,GAAM,OAAIA,EAAOC,aAAX,EACZC,UAAW,SAAAF,GAAM,OAAIA,EAAON,SAAS,uBAApB,IAErBX,KAAMS,EAAAA,KACHG,IAAI,EAAG,gDACPQ,IAAI,GAAI,qDACRC,QAAQ,eAAgB,mCACxBR,OACAF,SAAS,uBACZV,KAAMQ,EAAAA,GAAW,gDACda,WA5BL,SAA0BC,GACxB,GAAKA,EAAL,CAGA,IAAMC,EAAa,IAAIC,KAAKF,GAE5B,OADsBG,EAAAA,EAAAA,GAAOF,EAAY,aAFxC,CAIF,IAsBIX,OACAF,SAAS,gDACZT,MAAOO,EAAAA,KACJG,IAAI,EAAG,iDACPQ,IAAI,GAAI,sDACRC,QAAQ,eAAgB,oCACxBR,OACAF,SAAS,wBACZR,IAAKM,EAAAA,KACFC,MAAM,CAAC,OAAQ,WACfI,KAAK,WAAY,CAChBC,GAAI,SACJC,KAAM,SAAAC,GAAM,OAAIA,EAAOC,aAAX,EACZC,UAAW,SAAAF,GAAM,OAAIA,EAAON,UAAX,IAErBP,SAAUK,EAAAA,KACPY,QACC,gFACA,6BAEDR,OACAC,KAAK,WAAY,CAChBC,GAAI,SACJC,KAAM,SAAAC,GAAM,OAAIA,EAAOC,aAAX,EACZC,UAAW,SAAAF,GAAM,OAAIA,EAAON,SAAS,yBAApB,IAErBN,MAAOI,EAAAA,GAAW,4BACfkB,SAAS,EAAG,oCACZb,KAAK,WAAY,CAChBC,GAAI,OACJC,KAAM,SAAAC,GAAM,OAAIA,EAAON,UAAX,EACZQ,UAAW,SAAAF,GAAM,OAAIA,EAAOC,YAAY,uBAAvB,IAErBV,SAAUC,EAAAA,KACPG,IAAI,EADG,kCAEPQ,IAAI,IAAK,qCACTT,SAHO,yBC/DCiB,EAAOpC,EAAAA,EAAAA,GAAH,qJAEE,YAA6B,IAA1BC,EAAyB,EAAzBA,MAClB,OAAoB,IADuB,EAAlBG,YAEhBH,EAAMC,QAAQ,GAEhBD,EAAMC,QAAQ,EACtB,IAIM,qBAAGD,MAAkBC,QAAQ,EAA7B,IAGImC,EAAOrC,EAAAA,EAAAA,GAAH,2WAGN,qBAAGC,MAAkBC,QAAQ,GAA7B,IAEE,qBAAGD,MAAkBC,QAAQ,EAA7B,IACE,qBAAGD,MAAkBC,QAAQ,IAA7B,IACJ,YAAkC,IAA/BD,EAA8B,EAA9BA,MAAOG,EAAuB,EAAvBA,YAAakC,EAAU,EAAVA,IAC9B,OAAIlC,EAAckC,EAAY,UAC1BlC,IAAgBkC,EAAYrC,EAAMsC,OAAOC,KACzCpC,EAAckC,EAAYrC,EAAMsC,OAAOE,WAA3C,CACD,IAKU,qBAAGxC,MAAkBC,QAAQ,GAA7B,IACC,qBAAGD,MAAkBC,QAAQ,EAA7B,IAEH,qBAAGD,MAAkBC,QAAQ,EAA7B,IAEa,YAAkC,IAA/BD,EAA8B,EAA9BA,MAAOG,EAAuB,EAAvBA,YAAakC,EAAU,EAAVA,IACzC,OAAIlC,EAAckC,EAAYrC,EAAMsC,OAAOG,UACvCtC,IAAgBkC,EAAYrC,EAAMsC,OAAOC,KACzCpC,EAAckC,EAAYrC,EAAMsC,OAAOE,WAA3C,CACD,IACgB,qBAAGxC,MAAkBC,QAAQ,EAA7B,ICzCfyC,EAAS,CAAC,iBAAkB,mBAAoB,aActD,EAZgB,SAAC,GAAqB,IAAnBvC,EAAkB,EAAlBA,YACjB,OACE,SAACgC,EAAD,CAAMhC,YAAaA,EAAnB,SACGuC,EAAOC,KAAI,SAACC,EAAOP,GAAR,OACV,SAACD,EAAD,CAAgBC,IAAKA,EAAKlC,YAAaA,EAAvC,SACGyC,GADQP,EADD,KAOjB,E,UCXYQ,EAAe9C,EAAAA,EAAAA,OAAH,ifACV,SAAA+C,GACX,cAAIA,QAAJ,IAAIA,GAAAA,EAAOC,MACT,OAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAOC,MAETD,EAAM9C,MAAMC,QAAQ,GAC5B,IAKM,qBAAGD,MAAkBC,QAAQ,EAA7B,IAEM,qBAAGD,MAAkBC,QAAQ,EAA7B,IAEF,qBAAGD,MAAkBC,QAAQ,EAA7B,IACP,qBAAGD,MAAkBC,QAAQ,EAA7B,IAEgB,YAA6B,IAA1BD,EAAyB,EAAzBA,MACrB,OAD8C,EAAlBgD,YAEnB,cAEAhD,EAAMsC,OAAOC,IAEvB,IACQ,YAA6B,IAA1BvC,EAAyB,EAAzBA,MACV,OADmC,EAAlBgD,YAERhD,EAAMsC,OAAOC,KAEbvC,EAAMsC,OAAOW,KAEvB,IAGgB,qBAAGjD,MAAkBC,QAAQ,GAA7B,IAIN,YAA6B,IAA1BD,EAAyB,EAAzBA,MACV,OADmC,EAAlBgD,YAERhD,EAAMsC,OAAOW,MAEbjD,EAAMsC,OAAOC,IAEvB,IACmB,YAA6B,IAA1BvC,EAAyB,EAAzBA,MACrB,OAD8C,EAAlBgD,YAEnBhD,EAAMsC,OAAOC,KAEb,aAEV,I,8CChCL,EAnBe,SAAC,GAMT,IAAD,IALJW,KAAAA,OAKI,MALG,SAKH,MAJJF,YAAAA,OAII,SAHJG,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACGN,GACC,YACJ,OACE,SAACD,GAAD,gBACEG,YAAaA,EACbE,KAAMA,EACNE,QAASA,GACLN,GAJN,aAMGK,IAGN,E,UChBYE,GAAatD,EAAAA,EAAAA,GAAOuD,EAAAA,GAAPvD,CAAH,qJAMC,YAAsB,IAAnBC,EAAkB,EAAlBA,MACrB,MAAa,aAD0B,EAAXO,KAEnBP,EAAMsC,OAAOC,KAEf,aACR,IAEQ,YAAsB,IAAnBvC,EAAkB,EAAlBA,MACV,MAAa,aADe,EAAXO,KAERP,EAAMsC,OAAOW,MAEfjD,EAAMsC,OAAOE,KACrB,IAIQe,EAAaxD,EAAAA,EAAAA,MAAH,mVAED,YAAsB,IAAnBC,EAAkB,EAAlBA,MACrB,MAAa,aAD0B,EAAXO,KAEnBP,EAAMsC,OAAOG,UAEf,aACR,IACQ,YAAsB,IAAnBzC,EAAkB,EAAlBA,MACV,MAAa,aADe,EAAXO,KAERP,EAAMsC,OAAOC,KAEf,SACR,IACc,qBAAGvC,MAAkBC,QAAQ,EAA7B,IACG,qBAAGD,MAAkBC,QAAQ,EAA7B,IACF,qBAAGD,MAAkBC,QAAQ,EAA7B,IACC,qBAAGD,MAAkBC,QAAQ,EAA7B,IAEJ,YAAsB,IAAnBD,EAAkB,EAAlBA,MACd,MAAa,aADmB,EAAXO,KAEZP,EAAMC,QAAQ,KAEhBD,EAAMC,QAAQ,EACtB,IACc,YACb,MAAa,aADc,EAAXM,KAEP,IAEF,GACR,ICrCH,EAbyB,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,KAAMiD,EAAmB,EAAnBA,MAAO1B,EAAY,EAAZA,MACjC2B,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAEnC,OACE,4BACE,SAACN,EAAD,CAAYI,GAAIA,EAAIP,KAAK,QAAQ3C,KAAMA,EAAMuB,MAAOA,KACpD,SAACyB,EAAD,CAAYK,QAASH,EAAIlD,KAAMA,EAA/B,SACGiD,MAIR,ECuCD,GAvDe,CACbtD,SAAU,CACRK,KAAM,YAERH,MAAO,CACLG,KAAM,QACN2C,KAAM,OACNM,MAAO,eACPK,YAAa,qBAEftD,KAAM,CACJA,KAAM,OACN2C,KAAM,OACNM,MAAO,WACPK,YAAa,iBAEfrD,KAAM,CACJD,KAAM,OACN2C,KAAM,OACNM,MAAO,gBACPK,YAAa,sBAEfpD,MAAO,CACLF,KAAM,QACN2C,KAAM,OACNM,MAAO,QACPK,YAAa,cAEfnD,IAAK,CACHH,KAAM,OAERM,MAAO,CACLN,KAAM,QACNiD,MAAO,aAET7C,SAAU,CACRJ,KAAM,WACN2C,KAAM,OACNM,MAAO,WACPK,YAAa,iBAEfjD,MAAO,CACLL,KAAM,QACN2C,KAAM,OACNM,MAAO,QACPK,YAAa,cAEf9C,SAAU,CACRR,KAAM,WACNuD,GAAI,WACJN,MAAO,WACPK,YAAa,oCChDJE,GAAUhE,EAAAA,EAAAA,IAAH,wJACD,qBAAGC,MAAkBC,QAAQ,GAA7B,IAIV,qBAAGD,MAAkBC,QAAQ,EAA7B,IAgEI+D,GAAWjE,EAAAA,EAAAA,IAAH,uIC5BrB,GArCyB,SAAC,GAA0C,IAAxCkE,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACxCC,EAAsBH,EAAtBG,OAAQC,EAAcJ,EAAdI,UAOhB,OACE,UAACL,GAAD,YACE,UAACD,GAAD,YACE,SAAC,GAAD,QACEjC,MAAM,SACN0B,MAAM,YACFc,GAAWpE,YAEjB,SAAC,GAAD,QAAkB4B,MAAM,OAAO0B,MAAM,QAAWc,GAAWpE,YAC3D,SAAC,GAAD,QACE4B,MAAM,aACN0B,MAAM,gBACFc,GAAWpE,YAEjB,SAAC,GAAD,QACE4B,MAAM,WACN0B,MAAM,iBACFc,GAAWpE,eAGnB,0BACE,SAAC,EAAD,CAAQgD,KAAK,SAASE,QA3BR,WAClBc,EAAYE,EAAOlE,UACnBiE,EAAW,QACXE,EAAU,CAAC,EACZ,EAuBiDtB,MAAO,IAAnD,sBAMP,ECvCYwB,GAAQxE,EAAAA,EAAAA,MAAH,oHAEH,qBAAGC,MAAkBC,QAAQ,EAA7B,IAEI,qBAAGD,MAAkBC,QAAQ,EAA7B,IAGNuE,IAAQzE,EAAAA,EAAAA,GAAOuD,EAAAA,GAAPvD,CAAH,kSACP,qBAAGC,MAAkBC,QAAQ,GAA7B,IACC,YAAoB,IAAjBD,EAAgB,EAAhBA,MACX,GAAW,aADgB,EAAT8D,GAEhB,OAAO9D,EAAMC,QAAQ,GAExB,IACe,qBAAGD,MAAkBC,QAAQ,EAA7B,IACD,qBAAGD,MAAkBC,QAAQ,MAA7B,IACG,qBAAGD,MAAkBC,QAAQ,MAA7B,IAEd,YAAuC,IAApCM,EAAmC,EAAnCA,KAAMkE,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QAAS1E,EAAY,EAAZA,MAC1B,OAAOyE,EAAOlE,IAASmE,EAAQnE,GAC3BP,EAAMsC,OAAOqC,IACb3E,EAAMsC,OAAOC,IAClB,IACc,YAAoB,IAAjBvC,EAAgB,EAAhBA,MAClB,MAAW,aADuB,EAAT8D,GAEhB9D,EAAMC,QAAQ,GAEhBD,EAAMC,QAAQ,GACtB,IACY,qBAAGD,MAAkBC,QAAQ,IAA7B,IACX,YACA,GAAW,aADC,EAAT6D,GAED,MAAO,eAEV,IAaUc,IANe7E,EAAAA,EAAAA,KAAH,kFACd,qBAAGC,MAAkB2E,GAArB,IACI,qBAAG3E,MAAkBC,QAAQ,EAA7B,IACC,qBAAGD,MAAkBC,QAAQ,EAA7B,IAGOF,EAAAA,EAAAA,IAAH,iDACD,qBAAGC,MAAkBC,QAAQ,EAA7B,KCjDN4E,GAAY9E,EAAAA,EAAAA,EAAH,iGACX,qBAAGC,MAAkBsC,OAAOqC,GAA5B,IACI,qBAAG3E,MAAkBC,QAAQ,EAA7B,ICQf,GATkB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNuE,OAAQ,SAAAC,GAAO,OAAI,SAACF,GAAD,UAAYE,GAAhB,GAGpB,E,uCCQD,GAZkB,SAAC,GAAgD,IAA9CN,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,QAASlB,EAA4B,EAA5BA,MAAOjD,EAAqB,EAArBA,KAASuC,GAAY,aAC1DW,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAEnC,OACE,UAAC,GAAD,YACE,SAACY,GAAD,CAAOX,QAASH,EAAhB,SAAqBD,KACrB,SAACgB,IAAD,QAAOC,OAAQA,EAAQC,QAASA,EAASjB,GAAIA,EAAIlD,KAAMA,GAAUuC,KACjE,SAAC,GAAD,CAAWvC,KAAMA,MAGtB,ECdYyE,GAAajF,EAAAA,EAAAA,IAAH,wIAKd,qBAAGC,MAAkBC,QAAQ,IAA7B,ICmET,GAlE4B,SAAC,GAAuC,IAArCgE,EAAoC,EAApCA,QAASE,EAA2B,EAA3BA,WAAYjE,EAAe,EAAfA,SAC1CuE,EAAwDR,EAAxDQ,OAAQJ,EAAgDJ,EAAhDI,UAAWK,EAAqCT,EAArCS,QAASN,EAA4BH,EAA5BG,OAAQa,EAAoBhB,EAApBgB,gBACtCvC,EACS,WAAbxC,EACI,CAAC,OAAQ,OAAQ,SACjB,CAAC,QAAS,OAAQ,OAAQ,SAE1BgF,EAAe,WACnB,IAAMC,EAAa,CAAC,EACpB,IACEC,EAAAA,aAA8BhB,EAAQ,CACpCiB,YAAY,GASf,CAPC,MAAOC,GACPA,EAAMC,MAAM5C,KAAI,SAAA6C,GAId,OAHI9C,EAAO+C,SAASD,EAAIE,QACtBP,EAAWK,EAAIE,MAAQF,EAAIf,OAAO,IAE7Be,CACR,GACF,CACD,OAAOL,CACR,EAEKQ,EAAe,mCAAG,6FAChBlB,EAASS,IACoB,IAA/BU,OAAOC,KAAKpB,GAAQqB,OAFF,gBAGpB3B,EAAW,QAHS,uCAKdE,EAAUI,GALI,iBAMA/B,GANA,6DAMTE,EANS,SAOd8B,EAAQ9B,GAPM,yEAQZqC,EAAgBrC,GAAO,GARX,wMAAH,qDAYrB,OACE,2BACgB,WAAb1C,IACC,SAAC,IAAD,QAAWuE,OAAQA,EAAQC,QAASA,GAAaJ,GAAWlE,SAE9D,SAAC,IAAD,QAAWqE,OAAQA,EAAQC,QAASA,GAAaJ,GAAW/D,QAC5D,SAAC,IAAD,QAAWkE,OAAQA,EAAQC,QAASA,GAAaJ,GAAW9D,QAC5D,SAAC,IAAD,QAAWiE,OAAQA,EAAQC,QAASA,GAAaJ,GAAW7D,SAE5D,UAACuE,GAAD,YACE,SAAC,EAAD,CACEjC,MAAO,IACPK,QAAS,SAAA2C,GACPJ,EAAgBI,EACjB,EAJH,mBAQA,SAAC,EAAD,CACEhD,MAAO,IACPC,aAAa,EACbI,QAAS,kBAAMe,EAAW,OAAjB,EAHX,uBAUP,ECtEY6B,GAAcjG,EAAAA,EAAAA,MAAH,0CAIXkG,GAAclG,EAAAA,EAAAA,IAAH,2HACX,YACT,OAD2B,EAAfmG,SAEL,QADe,MAEvB,IACQ,qBAAGlG,MAAkBC,QAAQ,GAA7B,IACC,qBAAGD,MAAkBC,QAAQ,GAA7B,IAEO,qBAAGD,MAAkBC,QAAQ,EAA7B,IAGNkG,GAAcpG,EAAAA,EAAAA,MAAH,iIAEb,qBAAGC,MAAkBC,QAAQ,GAA7B,IACC,qBAAGD,MAAkBC,QAAQ,GAA7B,IACU,qBAAGD,MAAkBsC,OAAOG,SAA5B,IACH,qBAAGzC,MAAkBC,QAAQ,EAA7B,ICGnB,GAnBkB,SAAC,GAA+B,IAA7BmG,EAA4B,EAA5BA,SAAU7F,EAAkB,EAAlBA,KAAMM,EAAY,EAAZA,MAC7B4C,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAC/BuC,EAAW,KAIf,OAHIrF,IACFqF,EAAWG,IAAIC,gBAAgBzF,KAG/B,4BACE,SAACsF,GAAD,CAAavC,QAASH,EAAtB,UACE,SAACwC,GAAD,CAAaM,IAAKL,EAAUA,SAAUA,OAExC,4BACE,SAACF,GAAD,CAAa9C,KAAK,OAAO3C,KAAMA,EAAMkD,GAAIA,EAAI2C,SAAUA,KACvD,SAAC,GAAD,CAAW7F,KAAMA,SAIxB,ECrBYiG,GAAWzG,EAAAA,EAAAA,EAAH,yGAGN,qBAAGC,MAAkBC,QAAQ,KAA7B,IAIFwG,GAAO1G,EAAAA,EAAAA,IAAH,iFAGR,gBAAGC,EAAH,EAAGA,MAAO0G,EAAV,EAAUA,IAAV,OAAoB1G,EAAMC,QAAQyG,EAAM,EAAxC,ICqDT,GAvDqB,SAAC,GAMf,IALLC,EAKI,EALJA,SACA9F,EAII,EAJJA,MACAX,EAGI,EAHJA,SACAiE,EAEI,EAFJA,WAEI,IADJF,QAAWQ,EACP,EADOA,OAAQC,EACf,EADeA,QAEnB,OACE,2BACgB,WAAbxE,IACC,4BACE,SAACsG,GAAD,uBACA,UAACC,GAAD,CAAMC,IAAK,GAAX,WACE,SAAC,GAAD,QACE5E,MAAM,SACN0B,MAAM,UACFc,GAAW5D,OAEjB,SAAC,GAAD,QAAkBoB,MAAM,OAAO0B,MAAM,QAAWc,GAAW5D,UAE7D,SAAC,GAAD,CAAWH,KAAK,YAIpB,UAACkG,GAAD,CAAMC,IAAK,GAAX,WACE,SAACF,GAAD,yBACA,SAAC,IAAD,gBACE3F,MAAOA,GACHyD,GAAWzD,OAFjB,IAGEuF,SAAU,SAAAQ,GAAC,OAAID,EAASC,EAAEC,cAAcC,MAAM,GAAnC,QAGD,WAAb5G,IACC,SAAC,IAAD,QAAWuE,OAAQA,EAAQC,QAASA,GAAaJ,GAAW3D,WAGhD,SAAbT,IACC,SAAC,IAAD,QAAWuE,OAAQA,EAAQC,QAASA,GAAaJ,GAAW1D,SAE9D,SAAC,IAAD,QAAW6D,OAAQA,EAAQC,QAASA,GAAaJ,GAAWvD,YAC5D,SAAC8B,EAAD,CAAcK,KAAK,SAASH,MAAO,IAAnC,mBAGA,SAACF,EAAD,CACEG,aAAa,EACbE,KAAK,SACLH,MAAO,IACPK,QAAS,kBAAMe,EAAW,OAAjB,EAJX,oBAUL,ECoCD,GArFmB,WACjB,OAAgC4C,EAAAA,EAAAA,UAAS,UAAzC,eAAO7G,EAAP,KAAiBgE,EAAjB,KACA,GAA0B6C,EAAAA,EAAAA,UAAS,MAAnC,eAAOlG,EAAP,KAAc8F,EAAd,KACA,GAAsCI,EAAAA,EAAAA,UAAS,GAA/C,eAAO5G,EAAP,KAAoB6G,EAApB,KAEM7C,EAAa,SAAA8C,GACC,SAAdA,GACFD,GAAe,SAAAE,GAAI,OAAIA,EAAO,CAAX,IAEH,SAAdD,GACFD,GAAe,SAAAE,GAAI,OAAIA,EAAO,CAAX,GAEtB,EAEKC,EAAY,mCAAG,WAAO/C,EAAP,uFAAiBgD,EAAjB,EAAiBA,cAC/BvG,EADc,gCAEXuG,EAAc,QAAS,cAFZ,yCAMfC,EAAW,IAAIC,UACVC,OAAO,QAAS1G,GAPN,cAQDuD,GARC,iDAQVtC,EARU,WASZsC,EAAOtC,GATK,2DAYF,CAAC,QAAS,WAAY,OAC1B2D,SAAS3D,IAAuB,WAAb5B,EAbb,0DAiBH,UAAV4B,GAAkC,SAAb5B,EAjBR,uDAoBjBmH,EAASE,OAAOzF,EAAOsC,EAAOtC,IApBb,iCAuBEuF,EAASG,WAvBX,IAuBnB,2BAASC,EAAgC,QACvCC,QAAQC,IAAIF,EAAS,GAAIA,EAAS,GAxBjB,2EAAH,wDA4BlB,OACE,iCACE,SAAC,EAAD,CAAOvH,SAAUA,EAAUC,YAAaA,KACxC,SAAC,EAAD,CAASA,YAAaA,KACtB,SAAC,KAAD,CACEyH,eAAa,UAAOA,GACpBxC,iBAAkBA,EAClByC,gBAAgB,EAChBC,iBAAiB,EACjBC,SAAUZ,EALZ,SAOG,SAAAlD,GAAO,OACN,UAAC5D,EAAD,CAAY2H,aAAa,MAAzB,UACmB,IAAhB7H,IACC,SAAC,GAAD,CACE8D,QAASA,EACTC,YAAaA,EACbC,WAAYA,IAGC,IAAhBhE,IACC,SAAC,GAAD,CACE8D,QAASA,EACTE,WAAYA,EACZjE,SAAUA,IAGG,IAAhBC,IACC,SAAC,GAAD,CACED,SAAUA,EACVyG,SAAUA,EACVxC,WAAYA,EACZF,QAASA,EACTpD,MAAOA,MAtBP,MA8Bf,E,WC/FD,GCEmB,WACjB,OACE,SAAC,KAAD,WACE,SAAC,GAAD,KAGL,C","sources":["pages/AddPetPage/AddPetForm/FormFields/Title/Title.styled.jsx","pages/AddPetPage/AddPetForm/FormFields/Title/Title.jsx","pages/AddPetPage/AddPetForm/AddPetForm.styled.jsx","pages/AddPetPage/AddPetForm/FormModel/formInitualValues.js","pages/AddPetPage/AddPetForm/FormModel/validationSchema.js","pages/AddPetPage/AddPetForm/Stepper/Stepper.styled.jsx","pages/AddPetPage/AddPetForm/Stepper/Stepper.jsx","pages/AddPetPage/AddPetForm/FormFields/Button/Button.styled.jsx","pages/AddPetPage/AddPetForm/FormFields/Button/Button.jsx","pages/AddPetPage/AddPetForm/FormFields/RadioButtonField/RadioButtonField.styled.jsx","pages/AddPetPage/AddPetForm/FormFields/RadioButtonField/RadioButtonField.jsx","pages/AddPetPage/AddPetForm/FormModel/formFields.js","pages/AddPetPage/AddPetForm/Forms/ChooseOptionForm/ChooseOptionForm.styled.jsx","pages/AddPetPage/AddPetForm/Forms/ChooseOptionForm/ChooseOptionForm.jsx","pages/AddPetPage/AddPetForm/FormFields/TextField/TextField.styled.jsx","pages/AddPetPage/AddPetForm/FormFields/FormError/FormError.styled.jsx","pages/AddPetPage/AddPetForm/FormFields/FormError/FormError.jsx","pages/AddPetPage/AddPetForm/FormFields/TextField/TextField.jsx","pages/AddPetPage/AddPetForm/Forms/PersonalDetailsForm/PersonalDetailsForm.styled.jsx","pages/AddPetPage/AddPetForm/Forms/PersonalDetailsForm/PersonalDetailsForm.jsx","pages/AddPetPage/AddPetForm/FormFields/FileInput/FileInput.styled.jsx","pages/AddPetPage/AddPetForm/FormFields/FileInput/FileInput.jsx","pages/AddPetPage/AddPetForm/Forms/MoreInfoForm/MoreInfoForm.styled.jsx","pages/AddPetPage/AddPetForm/Forms/MoreInfoForm/MoreInfoForm.jsx","pages/AddPetPage/AddPetForm/AddPetForm.jsx","pages/AddPetPage/index.js","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledTitle = styled.h2`\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.spacing(7)}px;\n  margin-bottom: ${({ theme }) => theme.spacing(6)}px;\n`;\n","import { StyledTitle } from './Title.styled';\n\nconst Title = ({ category, currentStep }) => {\n  let title = '';\n  switch (category) {\n    case 'sell':\n      title = 'Add pet for sell';\n      break;\n    case 'lostFound':\n      title = 'Add lost pet';\n      break;\n    case 'inGoodHands':\n      title = 'Add pet in good hands';\n      break;\n    default:\n      title = 'Add pet';\n  }\n  if (currentStep === 0) {\n    title = 'Add pet';\n  }\n  return <StyledTitle>{title}</StyledTitle>;\n};\n\nexport default Title;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","const initialValues = {\n  category: 'my pet',\n  title: '',\n  name: '',\n  date: '',\n  breed: '',\n  sex: '',\n  location: '',\n  price: '',\n  photo: undefined,\n  comments: '',\n};\n\nexport default initialValues;\n","import * as Yup from 'yup';\nimport { format } from 'date-fns';\n\nfunction formatDateString(value) {\n  if (!value) {\n    return;\n  }\n  const parsedDate = new Date(value);\n  const formattedDate = format(parsedDate, 'dd.MM.yyyy');\n  return formattedDate;\n}\n\nconst validationSchema = Yup.object({\n  category: Yup.string()\n    .oneOf(['my pet', 'sell', 'lost-found', 'for-free'])\n    .required(),\n  title: Yup.string()\n    .min(2, 'The title must contain at least 2 characters')\n    .trim()\n    .when('category', {\n      is: 'my pet',\n      then: schema => schema.notRequired(),\n      otherwise: schema => schema.required('Please enter a title'),\n    }),\n  name: Yup.string()\n    .min(2, 'Enter a name that is at least 2 letters long')\n    .max(16, 'Please shorten your name to 16 characters or less')\n    .matches(/^[a-zA-Z ]+$/, 'A name can only contain letters')\n    .trim()\n    .required('Please enter a name'),\n  date: Yup.string('Please enter a date in a format \"dd.mm.yyyy\"')\n    .transform(formatDateString)\n    .trim()\n    .required('Please enter a date in a format \"dd.mm.yyyy\"'),\n  breed: Yup.string()\n    .min(2, 'Enter a breed that is at least 2 letters long')\n    .max(16, 'Please enter a breed not longer than 16 characters')\n    .matches(/^[a-zA-Z ]+$/, 'A breed can only contain letters')\n    .trim()\n    .required('Please enter a breed'),\n  sex: Yup.string()\n    .oneOf(['male', 'female'])\n    .when('category', {\n      is: 'my pet',\n      then: schema => schema.notRequired(),\n      otherwise: schema => schema.required(),\n    }),\n  location: Yup.string()\n    .matches(\n      /^(?:[A-Za-z]{2,}(?:(\\.\\s|'s\\s|\\s?-\\s?|\\s)?(?=[A-Za-z]+))){1,2}(?:[A-Za-z]+)?$/,\n      'Enter a correct city name'\n    )\n    .trim()\n    .when('category', {\n      is: 'my pet',\n      then: schema => schema.notRequired(),\n      otherwise: schema => schema.required('Please enter your city'),\n    }),\n  price: Yup.number('A price must be a number')\n    .moreThan(0, 'A price should be greater than 0')\n    .when('category', {\n      is: 'sell',\n      then: schema => schema.required(),\n      otherwise: schema => schema.notRequired('Please enter a price'),\n    }),\n  comments: Yup.string()\n    .min(8, `Please include more details...`)\n    .max(160, 'Please shorter a bit your comment')\n    .required(`Comment is required`),\n});\n\nexport default validationSchema;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin-bottom: ${({ theme, currentStep }) => {\n    if (currentStep === 0) {\n      return theme.spacing(7);\n    }\n    return theme.spacing(6);\n  }}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(3)}px;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  text-align: center;\n  width: ${({ theme }) => theme.spacing(20)}px;\n  font-weight: 500;\n  padding: ${({ theme }) => theme.spacing(3)}px 0;\n  font-size: ${({ theme }) => theme.spacing(2.5)}px;\n  color: ${({ theme, currentStep, idx }) => {\n    if (currentStep < idx) return '#888888';\n    if (currentStep === idx) return theme.colors.blue;\n    if (currentStep > idx) return theme.colors.green;\n  }};\n\n  &::after {\n    content: '';\n    display: block;\n    width: ${({ theme }) => theme.spacing(20)}px;\n    height: ${({ theme }) => theme.spacing(2)}px;\n    position: absolute;\n    top: ${({ theme }) => theme.spacing(9)}px;\n\n    background-color: ${({ theme, currentStep, idx }) => {\n      if (currentStep < idx) return theme.colors.lightblue;\n      if (currentStep === idx) return theme.colors.blue;\n      if (currentStep > idx) return theme.colors.green;\n    }};\n    border-radius: ${({ theme }) => theme.spacing(2)}px;\n  }\n`;\n","import { List, Item } from './Stepper.styled';\nconst fields = ['Choose  option', 'Personal details', 'More info'];\n\nconst Stepper = ({ currentStep }) => {\n  return (\n    <List currentStep={currentStep}>\n      {fields.map((field, idx) => (\n        <Item key={idx} idx={idx} currentStep={currentStep}>\n          {field}\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default Stepper;\n","import styled from '@emotion/styled';\n\nexport const StyledButton = styled.button`\n  min-width: ${props => {\n    if (props?.width) {\n      return props?.width;\n    }\n    return props.theme.spacing(41);\n  }}px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${({ theme }) => theme.spacing(1)}px;\n\n  font-size: ${({ theme }) => theme.spacing(4)}px;\n  font-weight: 700;\n  padding: ${({ theme }) => theme.spacing(2)}px\n    ${({ theme }) => theme.spacing(5)}px;\n\n  background-color: ${({ theme, transparent }) => {\n    if (transparent) {\n      return 'transparent';\n    } else {\n      return theme.colors.blue;\n    }\n  }};\n  color: ${({ theme, transparent }) => {\n    if (transparent) {\n      return theme.colors.blue;\n    } else {\n      return theme.colors.white;\n    }\n  }};\n\n  border: none;\n  border-radius: ${({ theme }) => theme.spacing(10)}px;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme, transparent }) => {\n      if (transparent) {\n        return theme.colors.white;\n      } else {\n        return theme.colors.blue;\n      }\n    }};\n    background-color: ${({ theme, transparent }) => {\n      if (transparent) {\n        return theme.colors.blue;\n      } else {\n        return 'transparent';\n      }\n    }};\n  }\n  cursor: pointer;\n  transition: background-color 250ms ease-in-out, color 250ms ease-in-out,\n    border 250ms ease-in-out;\n`;\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({\n  type = 'button',\n  transparent = false,\n  children,\n  onClick,\n  ...props\n}) => {\n  return (\n    <StyledButton\n      transparent={transparent}\n      type={type}\n      onClick={onClick}\n      {...props}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const RadioInput = styled(Field)`\n  opacity: 0;\n  position: fixed;\n  width: 0;\n\n  &:checked + label {\n    background-color: ${({ theme, name }) => {\n      if (name === 'category') {\n        return theme.colors.blue;\n      }\n      return 'transparent';\n    }};\n\n    color: ${({ theme, name }) => {\n      if (name === 'category') {\n        return theme.colors.white;\n      }\n      return theme.colors.green;\n    }};\n  }\n`;\n\nexport const RadioLabel = styled.label`\n  display: inline-block;\n  background-color: ${({ theme, name }) => {\n    if (name === 'category') {\n      return theme.colors.lightblue;\n    }\n    return 'transparent';\n  }};\n  color: ${({ theme, name }) => {\n    if (name === 'category') {\n      return theme.colors.blue;\n    }\n    return '#888888';\n  }};\n  padding-top: ${({ theme }) => theme.spacing(2)}px;\n  padding-bottom: ${({ theme }) => theme.spacing(2)}px;\n  padding-left: ${({ theme }) => theme.spacing(4)}px;\n  padding-right: ${({ theme }) => theme.spacing(4)}px;\n  font-family: inherit;\n  font-size: ${({ theme, name }) => {\n    if (name === 'category') {\n      return theme.spacing(3.5);\n    }\n    return theme.spacing(4);\n  }}px;\n  font-weight: ${({ name }) => {\n    if (name === 'category') {\n      return 500;\n    }\n    return 400;\n  }};\n  border: none;\n  border-radius: 40px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { RadioInput, RadioLabel } from './RadioButtonField.styled';\n\nconst RadioButtonField = ({ name, label, value }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      <RadioInput id={id} type=\"radio\" name={name} value={value} />\n      <RadioLabel htmlFor={id} name={name}>\n        {label}\n      </RadioLabel>\n    </div>\n  );\n};\n\nexport default RadioButtonField;\n","const fields = {\n  category: {\n    name: 'category',\n  },\n  title: {\n    name: 'title',\n    type: 'text',\n    label: 'Title of add',\n    placeholder: 'Type title of add',\n  },\n  name: {\n    name: 'name',\n    type: 'text',\n    label: 'Name pet',\n    placeholder: 'Type pet name',\n  },\n  date: {\n    name: 'date',\n    type: 'date',\n    label: 'Date of birth',\n    placeholder: 'Type date of birth',\n  },\n  breed: {\n    name: 'breed',\n    type: 'text',\n    label: 'Breed',\n    placeholder: 'Type breed',\n  },\n  sex: {\n    name: 'sex',\n  },\n  photo: {\n    name: 'photo',\n    label: 'Add photo',\n  },\n  location: {\n    name: 'location',\n    type: 'text',\n    label: 'Location',\n    placeholder: 'Type location',\n  },\n  price: {\n    name: 'price',\n    type: 'text',\n    label: 'Price',\n    placeholder: 'Type price',\n  },\n  comments: {\n    name: 'comments',\n    as: 'textarea',\n    label: 'Comments',\n    placeholder: 'Add more details about your pet',\n  },\n};\n\nexport default fields;\n","import styled from '@emotion/styled';\n// import { Field } from 'formik';\n\nexport const ToolBar = styled.div`\n  margin-bottom: ${({ theme }) => theme.spacing(25)}px; ////need fix!!\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: ${({ theme }) => theme.spacing(4)}px;\n`;\n\n// export const RadioInput = styled(Field)`\n//   opacity: 0;\n//   position: fixed;\n//   width: 0;\n\n//   &:checked + label {\n//     background-color: ${({ theme, name }) => {\n//       if (name === 'category') {\n//         return theme.colors.blue;\n//       }\n//       return 'transparent';\n//     }};\n\n//     color: ${({ theme, name }) => {\n//       if (name === 'category') {\n//         return theme.colors.white;\n//       }\n//       return theme.colors.green;\n//     }};\n//   }\n// `;\n\n// export const RadioLabel = styled.label`\n//   display: inline-block;\n//   background-color: ${({ theme, name }) => {\n//     if (name === 'category') {\n//       return theme.colors.lightblue;\n//     }\n//     return 'transparent';\n//   }};\n//   color: ${({ theme, name }) => {\n//     if (name === 'category') {\n//       return theme.colors.blue;\n//     }\n//     return '#888888';\n//   }};\n//   padding-top: ${({ theme }) => theme.spacing(2)}px;\n//   padding-bottom: ${({ theme }) => theme.spacing(2)}px;\n//   padding-left: ${({ theme }) => theme.spacing(4)}px;\n//   padding-right: ${({ theme }) => theme.spacing(4)}px;\n//   font-family: inherit;\n//   font-size: ${({ theme, name }) => {\n//     if (name === 'category') {\n//       return theme.spacing(3.5);\n//     }\n//     return theme.spacing(4);\n//   }}px;\n//   font-weight: ${({ name }) => {\n//     if (name === 'category') {\n//       return 500;\n//     }\n//     return 400;\n//   }};\n//   border: none;\n//   border-radius: 40px;\n\n//   &:hover {\n//     cursor: pointer;\n//   }\n// `;\n\nexport const FormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: space-between;\n  justify-content: space-between;\n`;\n","import Button from '../../FormFields/Button/Button';\n\nimport RadioButtonField from '../../FormFields/RadioButtonField/RadioButtonField';\nimport formFields from '../../FormModel/formFields';\n\nimport { ToolBar, FormWrap } from './ChooseOptionForm.styled';\n\nconst ChooseOptionForm = ({ helpers, setCategory, changeStep }) => {\n  const { values, setErrors } = helpers;\n  const handleClick = () => {\n    setCategory(values.category);\n    changeStep('next');\n    setErrors({});\n  };\n\n  return (\n    <FormWrap>\n      <ToolBar>\n        <RadioButtonField\n          value=\"my pet\"\n          label=\"Your pet\"\n          {...formFields.category}\n        />\n        <RadioButtonField value=\"sell\" label=\"Sell\" {...formFields.category} />\n        <RadioButtonField\n          value=\"lost-found\"\n          label=\"Lost / found\"\n          {...formFields.category}\n        />\n        <RadioButtonField\n          value=\"for-free\"\n          label=\"In good hands\"\n          {...formFields.category}\n        />\n      </ToolBar>\n      <div>\n        <Button type=\"button\" onClick={handleClick} width={248}>\n          Next\n        </Button>\n      </div>\n    </FormWrap>\n  );\n};\n\nexport default ChooseOptionForm;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Label = styled.label`\n  display: block;\n  font-size: ${({ theme }) => theme.spacing(4)}px;\n  /* font-weight: 500; */\n  margin-bottom: ${({ theme }) => theme.spacing(1)}px;\n`;\n\nexport const Input = styled(Field)`\n  width: ${({ theme }) => theme.spacing(66)}px;\n  height: ${({ theme, as }) => {\n    if (as === 'textarea') {\n      return theme.spacing(23);\n    }\n  }}px;\n  padding-left: ${({ theme }) => theme.spacing(4)}px;\n  padding-top: ${({ theme }) => theme.spacing(2.375)}px;\n  padding-bottom: ${({ theme }) => theme.spacing(2.375)}px;\n  border: 1px solid\n    ${({ name, errors, touched, theme }) => {\n      return errors[name] && touched[name]\n        ? theme.colors.red\n        : theme.colors.blue;\n    }};\n  border-radius: ${({ theme, as }) => {\n    if (as === 'textarea') {\n      return theme.spacing(5);\n    }\n    return theme.spacing(10);\n  }}px;\n  font-size: ${({ theme }) => theme.spacing(3.5)}px;\n  ${({ as }) => {\n    if (as === 'textarea') {\n      return 'resize: none;';\n    }\n  }}\n\n  &::-webkit-calendar-picker-indicator {\n    margin-right: 20px;\n  }\n`;\n\nexport const TextErrorCss = styled.span`\n  color: ${({ theme }) => theme.red};\n  font-size: ${({ theme }) => theme.spacing(3)}px;\n  margin-top: ${({ theme }) => theme.spacing(2)}px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: ${({ theme }) => theme.spacing(5)}px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ErrorText = styled.p`\n  color: ${({ theme }) => theme.colors.red};\n  font-size: ${({ theme }) => theme.spacing(3)}px;\n  margin: 4px 0 0;\n  width: 264px;\n`;\n","import { ErrorMessage } from 'formik';\nimport { ErrorText } from './FormError.styled';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport default FormError;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { Input, Label, Wrapper } from './TextField.styled';\nimport FormError from '../FormError/FormError';\n\nconst TextField = ({ errors, touched, label, name, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <Wrapper>\n      <Label htmlFor={id}>{label}</Label>\n      <Input errors={errors} touched={touched} id={id} name={name} {...props} />\n      <FormError name={name} />\n    </Wrapper>\n  );\n};\n\nexport default TextField;\n","import styled from '@emotion/styled';\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(2.5)}px;\n`;\n","import formFields from '../../FormModel/formFields';\nimport validationSchema from '../../FormModel/validationSchema';\n\nimport TextField from '../../FormFields/TextField/TextField';\nimport Button from '../../FormFields/Button/Button';\n\nimport { BtnWrapper } from './PersonalDetailsForm.styled';\n\nconst PersonalDetailsForm = ({ helpers, changeStep, category }) => {\n  const { errors, setErrors, touched, values, setFieldTouched } = helpers;\n  const fields =\n    category === 'my pet'\n      ? ['name', 'date', 'breed']\n      : ['title', 'name', 'date', 'breed'];\n\n  const validateForm = () => {\n    const formErrors = {};\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false,\n      });\n    } catch (error) {\n      error.inner.map(err => {\n        if (fields.includes(err.path)) {\n          formErrors[err.path] = err.errors[0];\n        }\n        return err;\n      });\n    }\n    return formErrors;\n  };\n\n  const handleNextClick = async () => {\n    const errors = validateForm();\n    if (Object.keys(errors).length === 0) {\n      changeStep('next');\n    } else {\n      await setErrors(errors);\n      for (const field of fields) {\n        if (touched[field]) continue;\n        await setFieldTouched(field, true);\n      }\n    }\n  };\n  return (\n    <div>\n      {category !== 'my pet' && (\n        <TextField errors={errors} touched={touched} {...formFields.title} />\n      )}\n      <TextField errors={errors} touched={touched} {...formFields.name} />\n      <TextField errors={errors} touched={touched} {...formFields.date} />\n      <TextField errors={errors} touched={touched} {...formFields.breed} />\n\n      <BtnWrapper>\n        <Button\n          width={248}\n          onClick={evt => {\n            handleNextClick(evt);\n          }}\n        >\n          Next\n        </Button>\n        <Button\n          width={248}\n          transparent={true}\n          onClick={() => changeStep('back')}\n        >\n          Back\n        </Button>\n      </BtnWrapper>\n    </div>\n  );\n};\n\nexport default PersonalDetailsForm;\n","import styled from '@emotion/styled';\n\nexport const CustomInput = styled.input`\n  display: none;\n`;\n\nexport const FilePreview = styled.img`\n  display: ${({ photoUrl }) => {\n    if (!photoUrl) return 'none';\n    return 'block';\n  }};\n  width: ${({ theme }) => theme.spacing(28)}px;\n  height: ${({ theme }) => theme.spacing(28)}px;\n  object-fit: cover;\n  border-radius: ${({ theme }) => theme.spacing(5)}px;\n`;\n\nexport const CustomLabel = styled.label`\n  display: block;\n  width: ${({ theme }) => theme.spacing(28)}px;\n  height: ${({ theme }) => theme.spacing(28)}px;\n  background-color: ${({ theme }) => theme.colors.lightblue};\n  border-radius: ${({ theme }) => theme.spacing(5)}px;\n`;\n","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport FormError from '../FormError/FormError';\n\nimport { CustomInput, CustomLabel, FilePreview } from './FileInput.styled';\n\nconst FileInput = ({ onChange, name, photo }) => {\n  const id = useMemo(() => nanoid(), []);\n  let photoUrl = null;\n  if (photo) {\n    photoUrl = URL.createObjectURL(photo);\n  }\n  return (\n    <div>\n      <CustomLabel htmlFor={id}>\n        <FilePreview src={photoUrl} photoUrl={photoUrl} />\n      </CustomLabel>\n      <div>\n        <CustomInput type=\"file\" name={name} id={id} onChange={onChange} />\n        <FormError name={name} />\n      </div>\n    </div>\n  );\n};\n\nexport default FileInput;\n","import styled from '@emotion/styled';\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: inherit;\n  font-size: ${({ theme }) => theme.spacing(3.75)}px;\n  font-weight: 500;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme, gap }) => theme.spacing(gap / 4)}px;\n`;\n","import formFields from '../../FormModel/formFields';\n\nimport TextField from '../../FormFields/TextField/TextField';\nimport RadioButtonField from '../../FormFields/RadioButtonField/RadioButtonField';\nimport FormError from '../../FormFields/FormError/FormError';\nimport FileInput from '../../FormFields/FileInput/FileInput';\n\nimport { StyledButton } from '../../FormFields/Button/Button.styled';\nimport { Subtitle, Wrap } from './MoreInfoForm.styled';\n\nconst MoreInfoForm = ({\n  setPhoto,\n  photo,\n  category,\n  changeStep,\n  helpers: { errors, touched },\n}) => {\n  return (\n    <div>\n      {category !== 'my pet' && (\n        <div>\n          <Subtitle>The sex</Subtitle>\n          <Wrap gap={12}>\n            <RadioButtonField\n              value=\"female\"\n              label=\"Female\"\n              {...formFields.sex}\n            />\n            <RadioButtonField value=\"male\" label=\"Male\" {...formFields.sex} />\n          </Wrap>\n          <FormError name=\"sex\" />\n        </div>\n      )}\n\n      <Wrap gap={28}>\n        <Subtitle>Add photo</Subtitle>\n        <FileInput\n          photo={photo}\n          {...formFields.photo}\n          onChange={e => setPhoto(e.currentTarget.files[0])}\n        />\n      </Wrap>\n      {category !== 'my pet' && (\n        <TextField errors={errors} touched={touched} {...formFields.location} />\n      )}\n\n      {category === 'sell' && (\n        <TextField errors={errors} touched={touched} {...formFields.price} />\n      )}\n      <TextField errors={errors} touched={touched} {...formFields.comments} />\n      <StyledButton type=\"submit\" width={248}>\n        Done\n      </StyledButton>\n      <StyledButton\n        transparent={true}\n        type=\"button\"\n        width={248}\n        onClick={() => changeStep('back')}\n      >\n        Back\n      </StyledButton>\n    </div>\n  );\n};\n\nexport default MoreInfoForm;\n","import { useState } from 'react';\n\nimport { Formik } from 'formik';\nimport Title from 'pages/AddPetPage/AddPetForm/FormFields/Title/Title';\nimport { StyledForm } from './AddPetForm.styled';\n\nimport initialValues from './FormModel/formInitualValues';\nimport validationSchema from './FormModel/validationSchema';\n\nimport Stepper from './Stepper/Stepper';\nimport ChooseOptionForm from './Forms/ChooseOptionForm/ChooseOptionForm';\nimport PersonalDetailsForm from './Forms/PersonalDetailsForm/PersonalDetailsForm';\nimport MoreInfoForm from './Forms/MoreInfoForm/MoreInfoForm';\n\nconst AddPetForm = () => {\n  const [category, setCategory] = useState('my pet');\n  const [photo, setPhoto] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const changeStep = direction => {\n    if (direction === 'next') {\n      setCurrentStep(prev => prev + 1);\n    }\n    if (direction === 'back') {\n      setCurrentStep(prev => prev - 1);\n    }\n  };\n\n  const handleSubmit = async (values, { setFieldError }) => {\n    if (!photo) {\n      await setFieldError('photo', 'Load image');\n      return;\n    }\n\n    let formData = new FormData();\n    formData.append('photo', photo);\n    for (let value in values) {\n      if (!values[value]) {\n        continue;\n      }\n      const fields = ['title', 'location', 'sex'];\n      if (fields.includes(value) && category === 'my pet') {\n        continue;\n      }\n\n      if (value === 'price' && category !== 'sell') {\n        continue;\n      }\n      formData.append(value, values[value]);\n    }\n\n    for (let property of formData.entries()) {\n      console.log(property[0], property[1]);\n    }\n  };\n\n  return (\n    <>\n      <Title category={category} currentStep={currentStep} />\n      <Stepper currentStep={currentStep} />\n      <Formik\n        initialValues={{ ...initialValues }}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        validateOnMount={false}\n        onSubmit={handleSubmit}\n      >\n        {helpers => (\n          <StyledForm autoComplete=\"off\">\n            {currentStep === 0 && (\n              <ChooseOptionForm\n                helpers={helpers}\n                setCategory={setCategory}\n                changeStep={changeStep}\n              />\n            )}\n            {currentStep === 1 && (\n              <PersonalDetailsForm\n                helpers={helpers}\n                changeStep={changeStep}\n                category={category}\n              />\n            )}\n            {currentStep === 2 && (\n              <MoreInfoForm\n                category={category}\n                setPhoto={setPhoto}\n                changeStep={changeStep}\n                helpers={helpers}\n                photo={photo}\n              />\n            )}\n          </StyledForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddPetForm;\n","import AddPetPage from \"./AddPetPage\";\n\nexport default AddPetPage;","import AddPetForm from './AddPetForm/AddPetForm';\n\nimport { Container } from 'shared/components/Container/Container.styled';\n\nconst AddPetPage = () => {\n  return (\n    <Container>\n      <AddPetForm />\n    </Container>\n  );\n};\n\nexport default AddPetPage;\n"],"names":["StyledTitle","styled","theme","spacing","category","currentStep","title","StyledForm","Form","name","date","breed","sex","location","price","photo","undefined","comments","Yup","oneOf","required","min","trim","when","is","then","schema","notRequired","otherwise","max","matches","transform","value","parsedDate","Date","format","moreThan","List","Item","idx","colors","blue","green","lightblue","fields","map","field","StyledButton","props","width","transparent","white","type","children","onClick","RadioInput","Field","RadioLabel","label","id","useMemo","nanoid","htmlFor","placeholder","as","ToolBar","FormWrap","helpers","setCategory","changeStep","values","setErrors","formFields","Label","Input","errors","touched","red","Wrapper","ErrorText","render","message","BtnWrapper","setFieldTouched","validateForm","formErrors","validationSchema","abortEarly","error","inner","err","includes","path","handleNextClick","Object","keys","length","evt","CustomInput","FilePreview","photoUrl","CustomLabel","onChange","URL","createObjectURL","src","Subtitle","Wrap","gap","setPhoto","e","currentTarget","files","useState","setCurrentStep","direction","prev","handleSubmit","setFieldError","formData","FormData","append","entries","property","console","log","initialValues","validateOnBlur","validateOnMount","onSubmit","autoComplete"],"sourceRoot":""}