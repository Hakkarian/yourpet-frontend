{"version":3,"file":"static/js/523.9d84ecfb.chunk.js","mappings":"iRAEaA,EAAgBC,EAAAA,EAAAA,GAAH,kIACX,qBAAGC,MAAkBC,QAAQ,GAA7B,IAIJ,qBAAGD,MAAkBE,OAAOC,KAA5B,ICFEC,EAAcL,EAAAA,EAAAA,IAAH,oGAMXM,EAAaN,EAAAA,EAAAA,IAAH,oMAUP,qBAAEC,MAAiBM,OAAOC,OAA1B,IAGHC,GAAUT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,w0CAoBI,qBAAGC,MAAkBE,OAAOQ,IAA5B,IAgCA,qBAAGV,MAAkBE,OAAOQ,IAA5B,IAgBXC,EAAYZ,EAAAA,EAAAA,IAAH,iDAgBTa,GAZWb,EAAAA,EAAAA,MAAH,qHAOYA,EAAAA,EAAAA,GAAOc,EAAAA,EAAPd,CAAH,sEACN,qBAAGC,MAAkBE,OAAOQ,IAA5B,KAIQX,EAAAA,EAAAA,GAAOD,EAAPC,CAAH,kGAOhBe,EAAcf,EAAAA,EAAAA,EAAH,mKAWXgB,EAAUhB,EAAAA,EAAAA,EAAH,uC,mBCrHdiB,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUJ,EAAAA,KAAaK,IAAI,EAAG,0CAA0CF,SAAS,2BCTnF,EDYqB,WACnB,OAAwBG,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OACE,SAACrB,EAAD,WACE,UAACC,EAAD,YACE,SAACO,EAAD,wBACA,SAAC,KAAD,CACEc,cAfa,CACnBP,MAAO,GACPE,SAAU,IAcJL,iBAAkBA,EAClBW,SAZa,SAAC,IACpBC,EAD0C,EAApBA,gBACR,EACf,EAOK,SAKG,gBAAGC,EAAH,EAAGA,aAAH,OACC,UAACrB,EAAD,YACE,UAACG,EAAD,CAAWmB,UAAU,QAArB,WACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,WACxB,wCAEF,UAACrB,EAAD,YACE,SAAC,KAAD,CAAOoB,KAAMP,EAAO,OAAS,WAAYQ,KAAK,cAC9C,uCACCR,GACC,mBAAQO,KAAK,SAASE,QAAS,kBAAMR,GAAQ,EAAd,EAA/B,oBAIA,mBAAQM,KAAK,SAASE,QAAS,kBAAMR,GAAQ,EAAd,EAA/B,sBAKJ,UAACd,EAAD,YACE,SAAC,KAAD,CAAOoB,KAAK,WAAWC,KAAK,cAC5B,+CACCR,GACC,mBAAQO,KAAK,SAASE,QAAS,kBAAMR,GAAQ,EAAd,EAA/B,oBAIA,mBAAQM,KAAK,SAASE,QAAS,kBAAMR,GAAQ,EAAd,EAA/B,sBAKJ,SAACZ,EAAA,EAAD,CAAgBkB,KAAK,SAASG,SAAUL,EAAxC,uBAGA,UAACf,EAAD,YACE,SAACC,EAAD,kCACA,SAAC,KAAD,CAAMoB,GAAG,SAAT,wBArCL,QA6CV,C","sources":["shared/components/ReusableTitle/ReusableTitle.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx","pages/RegisterPage/index.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReusableTitle = styled.h1`\n  font-size: ${({ theme }) => theme.spacing(12)}px;\n  font-weight: 700;\n  line-height: 66px;\n  letter-spacing: 0.03em;\n  color: ${({ theme }) => theme.colors.black};\n`;","import styled from '@emotion/styled';\nimport ReusableButton from 'shared/components/ReusableButton';\nimport { Form } from 'formik';\nimport { ReusableTitle } from 'shared/components/ReusableTitle/ReusableTitle';\n\nexport const RegisterCss = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const FlexDivCss = styled.div`\n  height: 433px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  padding: 40px 12px 0px 12px;\n\n\n  background-color: #fff;\n\n  border-radius: 20px;\n  box-shadow: ${({theme}) => theme.shadow.default};\n`;\n\nexport const FormCss = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 30px;\n\n\n  .field {\n    display: inline-block;\n    width: 250px;\n    height: 40px;\n  }\n\n  div {\n\n  }\n\n  div input {\n    width: 250px;\n    padding: 10px 12px 10px 12px;\n    border: 1px solid ${({ theme }) => theme.colors.blue};\n    border-radius: 5px;\n    font-size: 16px;\n\n\n    transition: transform 250ms ease-in-out, border 250ms ease-in-out;\n  }\n\n  div span {\n    position: absolute;\n    top: 0px;\n    right: 62%;\n    padding: 10px;\n    pointer-events: none;\n    font-size: 16px;\n\n    transition: transform 250ms ease-in-out, font-size 250ms linear,\n      padding 250ms ease-in-out, background-color 250ms ease-in-out,\n      border 250ms ease-in-out, letter-spacing 250ms linear, text-transform 250ms linear;\n  }\n\n  div:nth-of-type(1) span {\n    right: 75%;\n  }\n\n  div input:focus ~ span {\n    color: black;\n    transform: translate(33px, -5px);\n    font-size: 12px;\n    letter-spacing: 0.2em;\n    text-transform: uppercase;\n    padding: 5px 10px;\n    background-color: ${({ theme }) => theme.colors.blue};\n\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n  }\n\n  div:nth-of-type(1) input:focus ~ span {\n    transform: translate(30px, -7px);\n  } \n\n   div input:focus {\n    border: 1px solid black;\n    transform: scale(1);\n   }\n`;\n\nexport const AnchorCss = styled.div`\n    position: relative;\n`\n\nexport const LabelCss = styled.label`\n    position: absolute;\n    top: 50%;\n    left: 10%;\n    transform: translate(0%, -50%)\n`\n\nexport const ReusableButtonCss = styled(ReusableButton)`\n    background-color: ${({ theme }) => theme.colors.blue};\n    color: #fff;\n`;\n\nexport const ReusableTitleCss = styled(ReusableTitle)`\n    margin-top: 0;\n    margin-bottom: 30px;\n\n    text-align: center;\n`\n\nexport const TextWrapCss = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin: 0;\n\n  font-family: 'Manrope';\n  font-size: 12px;\n  font-weight: 400;\n`;\n\nexport const TextCss = styled.p`\n   margin: 0;\n`\n","import { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Field } from 'formik';\nimport ReusableButton from 'shared/components/ReusableButton';\nimport { AnchorCss, FlexDivCss, FormCss, RegisterCss, ReusableTitleCss, TextCss, TextWrapCss } from './RegisterPage.styled';\nimport { Link } from 'react-router-dom';\n// import { ReactComponent as EyeOpen } from '../../icons/eye-open.svg';\n// import { ReactComponent as EyeClosed } from '../../icons/eye-closed.svg';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required!')\n})\n\nconst RegisterPage = () => {\n  const [open, setOpen] = useState(true);\n  const initialState = {\n    email: '',\n    password: ''\n  }\n\n  const handleSubmit = ({ setSubmitting }) => {\n    setSubmitting(false)\n  }\n\n\n  return (\n    <RegisterCss>\n      <FlexDivCss>\n        <ReusableTitleCss>Register</ReusableTitleCss>\n        <Formik\n          initialValues={initialState}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <FormCss>\n              <AnchorCss className=\"wraps\">\n                <Field type=\"text\" name=\"email\" />\n                <span>Email</span>\n              </AnchorCss>\n              <AnchorCss>\n                <Field type={open ? 'text' : 'password'} name=\"password\" />\n                <span>Password</span>\n                {open ? (\n                  <button type=\"button\" onClick={() => setOpen(false)}>\n                    Close\n                  </button>\n                ) : (\n                  <button type=\"button\" onClick={() => setOpen(true)}>\n                    Open\n                  </button>\n                )}\n              </AnchorCss>\n              <AnchorCss>\n                <Field type=\"password\" name=\"password\" />\n                <span>Confirm password</span>\n                {open ? (\n                  <button type=\"button\" onClick={() => setOpen(false)}>\n                    Close\n                  </button>\n                ) : (\n                  <button type=\"button\" onClick={() => setOpen(true)}>\n                    Open\n                  </button>\n                )}\n              </AnchorCss>\n              <ReusableButton type=\"submit\" disabled={isSubmitting}>\n                Register\n              </ReusableButton>\n              <TextWrapCss>\n                <TextCss>Forgot an account?</TextCss>\n                <Link to=\"/login\">Login</Link>\n              </TextWrapCss>\n            </FormCss>\n          )}\n        </Formik>\n      </FlexDivCss>\n    </RegisterCss>\n  );\n}\n\nexport default RegisterPage;\n\n\n","import RegisterPage from \"./RegisterPage\";\n\nexport default RegisterPage;"],"names":["ReusableTitle","styled","theme","spacing","colors","black","RegisterCss","FlexDivCss","shadow","default","FormCss","Form","blue","AnchorCss","ReusableTitleCss","ReusableButton","TextWrapCss","TextCss","validationSchema","Yup","shape","email","required","password","min","useState","open","setOpen","initialValues","onSubmit","setSubmitting","isSubmitting","className","type","name","onClick","disabled","to"],"sourceRoot":""}